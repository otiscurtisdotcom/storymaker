{"version":3,"sources":["page/StoryTypes.tsx","page/Row.tsx","page/StoryRows.tsx","page/useSetRandomStory.tsx","page/Page.tsx","App.tsx","index.tsx"],"names":["Plot","Row","props","text","capitalize","word","replace","c","toUpperCase","getAct1","story","meet_cute","leadA","name","leadB","plot","SAVE_THE_BUSINESS","inciting_incident","shop","DESTROY_THE_BUSINESS","contest","getAct2","heart_warmer","second_interaction","pronoun1","start_drive","city","pronoun3","industry","continue_drive","town","low_point","pronoun2","getAct3","setup","final_push","getStoryRows","oldHelper","getRandom","list","Math","floor","random","length","getNouns","filter","tags","useSetRandomStory","useState","setStory","setContest","setLeadA","setLeadB","setCity","setTown","setShop","setOldHelper","fetchData","url","a","fetch","res","json","useEffect","getContestName","getLeads","getShop","getCity","getTown","getOldHelper","randomStory","isFood","then","results","randomContest","randomVerb","isLeadAMale","process","namesList","industryList","randomLeadA","names","namesListB","randomLeadB","randomShop","result","randomCity","cities","randomTown","towns","isOldHelperMale","Page","rows","setRows","currentRow","setCurrentRow","console","log","map","index","onClick","window","scrollTo","top","document","body","clientHeight","App","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ee273b1.chunk.js","sourcesContent":["export interface Story {\n  leadA: Character;\n  leadB: Character;\n  town: string;\n  city: string;\n  plot: Plot;\n  shop: string;\n  contest: string;\n  oldHelper: string;\n}\n\nexport interface Character {\n  name: string;\n  pronoun1: string;\n  pronoun2: string;\n  pronoun3: string;\n  industry?: string;\n}\n\nexport enum Plot {\n  DESTROY_THE_BUSINESS,\n  SAVE_THE_BUSINESS,\n  ENTER_THE_CONTEST\n}\n\nexport interface Act1 {\n  inciting_incident: string;\n  meet_cute: string;\n}\n\nexport interface Act2 {\n  second_interaction: string[];\n  heart_warmer: string;\n  start_drive: string[];\n  continue_drive: string[];\n  low_point: string[];\n}\n\nexport interface Act3 {\n  setup: string;\n  final_push: string[];\n}\n","const Row = (props: {\n  text: string,\n}) => {\n  return (\n    <p>{props.text}</p>\n  );\n}\n\nexport default Row;","import { Act1, Act2, Act3, Plot, Story } from \"./StoryTypes\";\n\nconst getStoryRows = (story: Story): string[] => {\n  return [\n    ////////\n    `- Act I -`,\n    ////////\n\n    `Meet ${story.leadA.name}. ${capitalize(story.leadA.pronoun1)}'s a high-flyer in the ${story.leadA.industry} industry in ${story.city}.`,\n    `${capitalize(story.leadA.pronoun1)} works really long hours to make the big bucks.`,\n    `This year, in early December, ${story.leadA.pronoun1} needs to return to ${story.leadA.pronoun3} small home-town of ${story.town},`,\n    `${getAct1(story).inciting_incident}.`,\n    `...`,\n\n    `${story.leadB.name} never left ${story.town},`,\n    `after ${story.leadB.pronoun1} inherited the ${story.shop} from ${story.leadB.pronoun3} parents, who tragically died in a helicopter accident.`,\n    `Christmas has always been special for ${story.leadB.name}, because it reminds ${story.leadB.pronoun2} of them.`,\n    `The ${story.shop} is not doing well financially,`,\n    `${story.leadB.name} explains this to ${story.leadB.pronoun3} only employee, ${story.oldHelper}, an old friend of ${story.leadB.pronoun3} parents.`,\n    `...`,\n\n    `${story.leadA.name} arrives back in ${story.town} and is instantly shocked at how friendly everyone is compared to ${story.city}.`,\n    `In ${story.leadA.pronoun3} first night in town, ${getAct1(story).meet_cute},`,\n    `and they get in a big argument and call each other names.`,\n    `...`,\n\n    ////////\n    `- Act II -`,\n    ////////\n\n    `The following morning, ${story.leadA.name} arrives at the ${story.shop} and ${story.leadB.name} is surprised and angry.`,\n    `${story.leadA.name} explains why ${story.leadA.pronoun1} is here:`,\n    ...getAct2(story).second_interaction,\n    `...`,\n\n    `That evening, despite being low on funds, ${story.leadB.name} ${getAct2(story).heart_warmer} at the ${story.shop}.`,\n    `Everyone in ${story.town} attends, including ${story.leadA.name}, and the place is filled with Christmas spirit.`,\n    `...`,\n\n    ...getAct2(story).start_drive,\n    `...`,\n\n    ...getAct2(story).continue_drive,\n    `...`,\n\n    ...getAct2(story).low_point,\n    `...`,\n\n    ////////\n    `- Act III -`,\n    ////////\n\n    `${story.oldHelper} convinces ${story.leadB.name} and ${story.leadA.name} that they should ${getAct3(story).setup}`,\n    `it's what ${story.leadB.pronoun3} parents would have wanted.`,\n    `...`,\n\n    ...getAct3(story).final_push,\n    `...`,\n\n    `${story.leadB.name} and ${story.leadA.name} realise they are in love.`,\n    `They kiss.`,\n    `- THE END -`\n  ];\n}\n\nconst capitalize = (word: string): string => {\n  return word.replace(/^\\w/, (c) => c.toUpperCase());\n}\n\nconst getAct1 = (story: Story): Act1 => {\n  // TODO Randomise\n  const meet_cute = `${story.leadA.name} accidentally kicks ${story.leadB.name}'s dog`;\n\n  if (story.plot === Plot.SAVE_THE_BUSINESS) {\n    return {\n      inciting_incident: `to save the local ${story.shop}`,\n      meet_cute,\n    };\n  } else if (story.plot === Plot.DESTROY_THE_BUSINESS) {\n    return {\n      inciting_incident: `to demolish the local ${story.shop}`,\n      meet_cute,\n    };\n  } else {\n    // (ENTER THE CONTEST)\n    return {\n      inciting_incident: `to enter the ${story.shop}'s annual ${story.contest}`,\n      meet_cute,\n    };\n  }\n}\n\nconst getAct2 = (story: Story): Act2 => {\n  // TODO Randomise\n  const heart_warmer = `gives out presents to blind children`;\n\n  if (story.plot === Plot.SAVE_THE_BUSINESS) {\n    return {\n      second_interaction: [\n        `Because ${story.leadA.pronoun1} heard the ${story.shop} was going out of business,`,\n        `and wanted to see if ${story.leadA.pronoun1} could help save it,`,\n        `because ${story.leadA.pronoun1} always used to love it as a child`,\n      ],\n      heart_warmer,\n      start_drive: [\n        `${story.leadA.name} returns to ${story.city},`,\n        `to speak to ${story.leadA.pronoun3} boss at the ${story.leadA.industry} firm.`,\n      ],\n      continue_drive: [\n        `Initially ${story.leadA.name} manages to convince the boss of the charms of ${story.town} and it's ${story.shop}.`,\n        `But they refuse to give the money needed to save it`,\n      ],\n      low_point: [\n        `${story.leadA.name} quits on the spot, and returns to ${story.town} empty handed.`\n      ],\n    };\n  } else if (story.plot === Plot.DESTROY_THE_BUSINESS) {\n    return {\n      second_interaction: [\n        `Because ${story.leadA.pronoun3} ${story.leadA.industry} company is considering buying out the ${story.shop} when it goes under,`,\n        `and turn it into luxury housing,`,\n        `and ${story.leadA.pronoun1} is here to see if it's a good investment.`,\n      ],\n      heart_warmer,\n      start_drive: [\n        `${story.leadA.name} returns to ${story.city},`,\n        `to speak to ${story.leadA.pronoun3} boss at the ${story.leadA.industry} firm.`,\n      ],\n      continue_drive: [\n        `${story.leadA.name} tries to convince the boss that buying the ${story.town} ${story.shop} would be a bad investment.`,\n        `The boss disagrees, and says they will demolish the ${story.shop} next week`,\n      ],\n      low_point: [\n        `${story.leadA.name} quits on the spot, and returns to ${story.town} empty handed.`\n      ],\n    };\n  } else {\n    // (ENTER THE CONTEST)\n    return {\n      second_interaction: [\n        `${capitalize(story.leadA.pronoun1)} wants to enter the ${story.shop}'s ${story.contest},`,\n        `because it reminds ${story.leadA.pronoun2} of ${story.leadA.pronoun3} childhood.`,\n        `${story.leadB.name} explains that there won't be a ${story.contest}, because the ${story.shop} can't afford to put it on,`,\n        `and anyway, people just don't care about Christmas like they used to.`,\n      ],\n      heart_warmer,\n      start_drive: [\n        `${story.leadA.name} convinces ${story.leadB.name} they can raise the funds they need,`,\n        `by having a special Christmas-themed sale at the ${story.shop},`,\n        `which will raise enough to save the business and hold the ${story.contest} once again.`\n      ],\n      continue_drive: [\n        `The people of ${story.town} come together to raise the money,`,\n        `united by the spirit of Christmas, everyone is preparing for the ${story.contest}.`,\n      ],\n      low_point: [\n        `But the local cop shuts it down for not having the right permits`,\n      ],\n    };\n  }\n}\n\nconst getAct3 = (story: Story): Act3 => {\n  if (story.plot === Plot.SAVE_THE_BUSINESS) {\n    return {\n      setup: `Put on a talent show to save the ${story.shop},`,\n      final_push: [\n        `Everyone from ${story.town} attends the magical night,`,\n        `where the townspeople show off their quirky talents.`,\n        `Even the local cop, who plays the piano.`,\n        `At the end of the night, ${story.leadB.name} and ${story.leadA.name} have saved enough money to keep the ${story.shop} in business.`,\n      ],\n    };\n  } else if (story.plot === Plot.DESTROY_THE_BUSINESS) {\n    return {\n      setup: `protect the ${story.shop},`,\n      final_push: [\n        `As the bulldozers arrive,`,\n        `${story.leadB.name}, ${story.leadA.name} and the people of ${story.town} sing Christmas carols outside the ${story.shop},`,\n        `Even the local cop.`,\n        `${story.leadA.name}'s boss from the ${story.leadA.industry} company jumps down from one of the bulldozers smoking a cigar.`,\n        `Overwhelmed by the spirit of Christmas in the town,`,\n        `the demolition is called off,`,\n        `and they agree to give ${story.leadB.name} and ${story.leadA.name} the money they need to keep the ${story.shop} in business.`,\n      ],\n    };\n  } else {\n    // (ENTER THE CONTEST)\n    return {\n      setup: `hold the ${story.contest} anyway,`,\n      final_push: [\n        `The ${story.contest} goes ahead, and everyone in ${story.town} attends`,\n        `Just as they are getting started, the police show up to call it off.`,\n        `However, when they see the Christmas spirit of the whole town,`,\n        `they decide to let it go ahead anyway.`,\n        `${story.leadA.name} wins the contest,`,\n        `but more importantly everyone has fun.`,\n      ],\n    };\n  }\n}\n\nexport default getStoryRows;\n","import { useEffect, useState } from \"react\";\nimport { Character, Story } from \"./StoryTypes\";\n\ninterface DataMuseData {\n  score: number,\n  tags?: string[],\n  word: string,\n}\n\nconst getRandom = (list: any[]): any => {\n  const randomNumber = Math.floor(Math.random() * list.length);\n  return list[randomNumber];\n}\n\nconst getNouns = (list: DataMuseData[]): DataMuseData[] => {\n  return list.filter((word) => word.tags?.length === 1 && word.tags[0] === 'n');\n}\n\nconst useSetRandomStory = () => {\n  const [story, setStory] = useState<Story|null>(null);\n  const [contest, setContest] = useState('');\n  const [leadA, setLeadA] = useState<Character>();\n  const [leadB, setLeadB] = useState<Character>();\n  const [city, setCity] = useState('');\n  const [town, setTown] = useState('');\n  const [shop, setShop] = useState('');\n  const [oldHelper, setOldHelper] = useState('');\n  \n  const fetchData = async (url: string) => {\n    const res = await fetch(url);\n    const json = await res.json();\n\n    return json;\n  };\n\n  // USE EFFECTS CHAIN REACTION (ON INIT)\n  useEffect(() => {\n    getContestName();\n  }, []);\n\n  useEffect(() => {\n    if (contest) {\n      getLeads();\n    }\n  }, [contest]);\n\n  useEffect(() => {\n    if (leadA && leadB) {\n      getShop();\n    }\n  }, [leadA, leadB]);\n\n  useEffect(() => {\n    if (shop) {\n      getCity();\n    }\n  }, [shop]);\n\n  useEffect(() => {\n    if (city) {\n      getTown();\n    }\n  }, [city]);\n\n  useEffect(() => {\n    if (town) {\n      getOldHelper();\n    }\n  }, [town]);\n\n  useEffect(() => {\n    if (leadA && leadB && town && city && contest && oldHelper) {\n      const randomStory: Story = {\n        leadA,\n        leadB,\n        town,\n        city,\n        contest,\n        oldHelper,\n        shop,\n        plot: Math.floor(Math.random() * 3),\n      };\n      setStory(randomStory);\n    }\n  }, [oldHelper]);\n\n\n\n\n\n  // GET FUNCTIONS\n  const getContestName = () => {\n    const isFood = getRandom([1,2]) === 1;\n    const source = isFood ? 'ml=christmas+food' : 'ml=christmas+object';\n\n    fetchData(`https://api.datamuse.com/words?${source}`)\n    .then((results: DataMuseData[]) => {\n      const randomContest = getRandom(getNouns(results)).word;\n      const randomVerb = isFood ? getRandom(['eating', 'cooking']) : getRandom(['making', 'throwing', 'sculpting']);\n      setContest(`${randomContest} ${randomVerb} contest`);\n    });\n  }\n\n  const getLeads = () => {\n    const isLeadAMale = getRandom([1,2]) === 1;\n    \n    // Lead A\n    fetchData(`${process.env.PUBLIC_URL}/data/${isLeadAMale ? 'm' : 'f'}-names.json`)\n    .then((namesList: {names: string[]}) => {\n\n      // Get Industry\n      fetchData(`https://api.datamuse.com/words?rel_bgb=industry&topics=work`)\n      .then((industryList: DataMuseData[]) => {\n        const randomLeadA: Character = {\n          name: getRandom(namesList.names).name,\n          pronoun1: isLeadAMale ? 'he' : 'she',\n          pronoun2: isLeadAMale ? 'him' : 'her',\n          pronoun3: isLeadAMale ? 'his' : 'her',\n          industry: getRandom(industryList).word\n        }\n        setLeadA(randomLeadA);\n  \n        // Lead B\n        fetchData(`${process.env.PUBLIC_URL}/data/${!isLeadAMale ? 'm' : 'f'}-names.json`)\n        .then((namesListB: {names: string[]}) => {\n          const randomLeadB: Character = {\n            name: getRandom(namesListB.names).name,\n            pronoun1: !isLeadAMale ? 'he' : 'she',\n            pronoun2: !isLeadAMale ? 'him' : 'her',\n            pronoun3: !isLeadAMale ? 'his' : 'her',\n          }\n          setLeadB(randomLeadB);\n        });\n      })\n    });\n  }\n\n  const getShop = () => {\n    fetchData(`https://api.datamuse.com/words?ml=christmas+object&rc=shop`)\n    .then((results: DataMuseData[]) => {\n      const randomShop = getRandom(getNouns(results)).word;\n      setShop(`${randomShop} shop`);\n    });\n  }\n\n  const getCity = () => {\n    fetchData(`${process.env.PUBLIC_URL}/data/cities.json`)\n    .then((result: {cities: string[]}) => {\n      const randomCity = getRandom(result.cities);\n      setCity(randomCity.city);\n    });\n  }\n\n  const getTown = () => {\n    fetchData(`${process.env.PUBLIC_URL}/data/towns.json`)\n    .then((result: {towns: string[]}) => {\n      const randomTown = getRandom(result.towns);\n      setTown(randomTown.town);\n    });\n  }\n\n  const getOldHelper = () => {\n    const isOldHelperMale = getRandom([0,1]) === 0;\n    fetchData(`${process.env.PUBLIC_URL}/data/${isOldHelperMale ? 'm' : 'f'}-names.json`)\n    .then((result: {names: string[]}) => {\n      setOldHelper(getRandom(result.names).name);\n    });\n  }\n\n\n  // RETURN\n  return story;\n}\n\nexport default useSetRandomStory;","import { useEffect, useState } from \"react\";\nimport { Story } from \"./StoryTypes\";\nimport Row from \"./Row\";\nimport getStoryRows from \"./StoryRows\";\nimport useSetRandomStory from \"./useSetRandomStory\";\n\nconst Page = () => {\n  const [rows, setRows] = useState<string[]>([]);\n  const [currentRow, setCurrentRow] = useState(0);\n  // const [story, setStory] = useState<Story>();\n\n  const nextRow = () => {\n    const newRow = currentRow + 1;\n    setCurrentRow(newRow);\n    window.scrollTo({top: document.body.clientHeight});\n  };\n\n  const randomStory = useSetRandomStory();\n\n  // ON APP INIT\n  useEffect(() => {\n    console.log('INIT');\n  }, []);\n\n  // ON BACKSTORY LOAD\n  useEffect(() => {\n    if (randomStory) {\n      setRows(getStoryRows(randomStory));\n    }\n  }, [randomStory]);\n\n  return (\n    <div>\n      <div>\n        {rows.map((text, index) => {\n          if (index <= currentRow) {\n            return <Row key={index}\n                        text={text}\n                  />\n          }\n        })}\n      </div>\n      <button onClick={nextRow}>Next</button>\n    </div>\n  );\n}\n\nexport default Page;","import './App.scss';\nimport Page from './page/Page';\n\nconst App = () => {\n  return (\n    <div className=\"wrapper\">\n      <header>\n        <h1>Story Maker</h1>\n      </header>\n      <main>\n        <Page></Page>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
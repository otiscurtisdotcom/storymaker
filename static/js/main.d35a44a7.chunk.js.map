{"version":3,"sources":["page/Row.tsx","page/Page.tsx","page/StoryRows.tsx","App.tsx","index.tsx"],"names":["Row","props","text","isLastRow","onClick","nextRow","button","FAKE_STORY","leadA","name","gender","pronoun1","pronoun2","leadB","city","town","Page","useState","rows","setRows","currentRow","setCurrentRow","backStory","setBackStory","useEffect","word","replace","c","toUpperCase","getStoryRows","map","index","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAmBeA,EAnBH,SAACC,GAWX,OACE,gCACE,4BAAIA,EAAMC,OARC,WACb,GAAID,EAAME,UACR,OAAO,wBAAQC,QAASH,EAAMI,QAAvB,kBAONC,OCTDC,EAAwB,CAC5BC,MAAO,CACLC,KAAM,MACNC,OAAQ,CACNC,SAAU,KACVC,SAAU,QAGdC,MAAO,CACLJ,KAAM,MACNC,OAAQ,CACNC,SAAU,MACVC,SAAU,QAGdE,KAAM,SACNC,KAAM,kBAyCOC,EAtCF,WACX,MAAwBC,mBAAmB,IAA3C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,qBAAlC,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMlB,EAAU,WAEdgB,EADeD,EAAa,IAiB9B,OAZAI,qBAAU,WAERD,EADoChB,KAEnC,IAGHiB,qBAAU,WACJF,GACFH,ECrCsB,SAACG,GAC3B,MAAO,CAAC,QAAD,OACGA,EAAUd,MAAMC,KADnB,mCACkDa,EAAUR,KAD5D,gBALWW,EAOFH,EAAUd,MAAME,OAAOC,SANhCc,EAAKC,QAAQ,OAAO,SAACC,GAAD,OAAOA,EAAEC,kBAI7B,+BALU,IAACH,EDyCNI,CAAaP,MAEtB,CAACA,IAGF,8BACGJ,EAAKY,KAAI,SAAC5B,EAAM6B,GACf,GAAIA,GAASX,EACX,OAAO,cAAC,EAAD,CACKlB,KAAMA,EACNG,QAASA,EACTF,UAAW4B,IAAUX,GAHhBW,SEnCZC,EAbH,WACV,OACE,sBAAKC,UAAU,UAAf,UACE,iCACE,+CAEF,+BACE,cAAC,EAAD,UCLRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d35a44a7.chunk.js","sourcesContent":["const Row = (props: {\n  text: string,\n  nextRow: () => void\n  isLastRow: boolean\n}) => {\n  const button = () => {\n    if (props.isLastRow) {\n      return <button onClick={props.nextRow}>Next</button>;\n    }\n  }\n\n  return (\n    <div>\n      <p>{props.text}</p>\n      {button()}\n    </div>\n  );\n}\n\nexport default Row;","import { useEffect, useState } from \"react\";\nimport { BackStory } from \"./BackStoryTypes\";\nimport Row from \"./Row\";\nimport { getStoryRows } from \"./StoryRows\";\n\nconst FAKE_STORY: BackStory = {\n  leadA: {\n    name: 'Tom',\n    gender: {\n      pronoun1: 'he',\n      pronoun2: 'his'\n    }\n  },\n  leadB: {\n    name: 'Sue',\n    gender: {\n      pronoun1: 'she',\n      pronoun2: 'her'\n    }\n  },\n  city: 'London',\n  town: 'Haywards Heath'\n}\n\nconst Page = () => {\n  const [rows, setRows] = useState<string[]>([]);\n  const [currentRow, setCurrentRow] = useState(0);\n  const [backStory, setBackStory] = useState<BackStory>();\n\n  const nextRow = () => {\n    const newRow = currentRow + 1;\n    setCurrentRow(newRow);\n  };\n\n  // ON APP INIT\n  useEffect(() => {\n    const starterBackStory: BackStory = FAKE_STORY;\n    setBackStory(starterBackStory);\n  }, []);\n\n  // ON BACKSTORY LOAD\n  useEffect(() => {\n    if (backStory) {\n      setRows(getStoryRows(backStory!));\n    }\n  }, [backStory]);\n\n  return (\n    <div>\n      {rows.map((text, index) => {\n        if (index <= currentRow) {\n          return <Row key={index}\n                      text={text}\n                      nextRow={nextRow}\n                      isLastRow={index === currentRow}\n                 />\n        }\n      })}\n    </div>\n  );\n}\n\nexport default Page;","import { BackStory } from \"./BackStoryTypes\";\n\nconst capitalize = (word: string): string => {\n  return word.replace(/^\\w/, (c) => c.toUpperCase());\n}\n\nexport const getStoryRows = (backStory: BackStory): string[] => {\n  return [\n    `Meet ${backStory.leadA.name}. The city slicker from ${backStory.city}.`,\n    `${capitalize(backStory.leadA.gender.pronoun1)} works in a bank.`,\n    `test 3`\n  ];\n}\n","import './App.scss';\nimport Page from './page/Page';\n\nconst App = () => {\n  return (\n    <div className=\"wrapper\">\n      <header>\n        <h1>Story Maker</h1>\n      </header>\n      <main>\n        <Page></Page>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
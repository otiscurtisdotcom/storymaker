{"version":3,"sources":["page/StoryTypes.tsx","page/Row.tsx","page/StoryRows.tsx","page/Page.tsx","App.tsx","index.tsx"],"names":["Plot","Row","props","text","capitalize","word","replace","c","toUpperCase","getAct1","story","meet_cute","leadA","name","leadB","plot","SAVE_THE_BUSINESS","inciting_incident","place_of_work","DESTROY_THE_BUSINESS","contest","getAct2","heart_warmer","second_interaction","pronoun1","start_drive","city","pronoun3","continue_drive","town","low_point","pronoun2","getAct3","final_push","old_helper","FAKE_STORY","Math","floor","random","Page","useState","rows","setRows","currentRow","setCurrentRow","setStory","useEffect","getStoryRows","map","index","onClick","window","scrollTo","top","document","body","clientHeight","App","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"8JAkBYA,E,4DCVGC,EARH,SAACC,GAGX,OACE,4BAAIA,EAAMC,Q,iBDcFH,O,+CAAAA,I,yCAAAA,I,0CAAAA,M,KEhBL,IA0DDI,EAAa,SAACC,GAClB,OAAOA,EAAKC,QAAQ,OAAO,SAACC,GAAD,OAAOA,EAAEC,kBAGhCC,EAAU,SAACC,GAEf,IAAMC,EAAS,UAAMD,EAAME,MAAMC,KAAlB,+BAA6CH,EAAMI,MAAMD,KAAzD,sEAEf,OAAIH,EAAMK,OAASf,EAAKgB,kBACf,CACLC,kBAAkB,qBAAD,OAAuBP,EAAMI,MAAMI,eACpDP,aAEOD,EAAMK,OAASf,EAAKmB,qBACtB,CACLF,kBAAkB,yBAAD,OAA2BP,EAAMI,MAAMI,eACxDP,aAIK,CACLM,kBAAkB,gBAAD,OAAkBP,EAAMI,MAAMI,cAA9B,qBAAwDR,EAAMU,SAC/ET,cAKAU,EAAU,SAACX,GAEf,IAAMY,EAAY,uCAElB,OAAIZ,EAAMK,OAASf,EAAKgB,kBACf,CACLO,mBAAoB,CAAC,WAAD,OACPb,EAAME,MAAMY,SADL,sBAC2Bd,EAAMI,MAAMI,cADvC,8DAEMR,EAAME,MAAMY,SAFlB,0CAGPd,EAAME,MAAMY,SAHL,uCAKpBF,eACAG,YAAa,CAAC,GAAD,OACRf,EAAME,MAAMC,KADJ,uBACuBH,EAAMgB,KAD7B,2BAEIhB,EAAME,MAAMe,SAFhB,wBAEwCjB,EAAME,MAAMM,cAFpD,MAIbU,eAAgB,CAAC,aAAD,OACDlB,EAAME,MAAMC,KADX,0DACiEH,EAAMmB,KADvE,qBACwFnB,EAAMI,MAAMI,cADpG,4DAIhBY,UAAW,CAAC,GAAD,OACNpB,EAAME,MAAMC,KADN,8CACgDH,EAAMmB,KADtD,oBAIJnB,EAAMK,OAASf,EAAKmB,qBACtB,CACLI,mBAAoB,CAAC,WAAD,OACPb,EAAME,MAAMe,SADL,YACiBjB,EAAME,MAAMM,cAD7B,0CAC4ER,EAAMI,MAAMI,cADxF,yEAGXR,EAAME,MAAMY,SAHD,+CAKpBF,eACAG,YAAa,CAAC,GAAD,OACRf,EAAME,MAAMC,KADJ,uBACuBH,EAAMgB,KAD7B,2BAEIhB,EAAME,MAAMe,SAFhB,wBAEwCjB,EAAME,MAAMM,cAFpD,MAIbU,eAAgB,CAAC,GAAD,OACXlB,EAAME,MAAMC,KADD,uDACoDH,EAAMmB,KAD1D,YACkEnB,EAAMI,MAAMI,cAD9E,6FAEyCR,EAAMI,MAAMI,cAFrD,eAIhBY,UAAW,CAAC,GAAD,OACNpB,EAAME,MAAMC,KADN,8CACgDH,EAAMmB,KADtD,oBAMN,CACLN,mBAAoB,CAAC,GAAD,OACfnB,EAAWM,EAAME,MAAMY,UADR,+BACwCd,EAAMI,MAAMI,cADpD,cACuER,EAAMU,QAD7E,kCAEIV,EAAME,MAAMmB,SAFhB,eAE+BrB,EAAME,MAAMe,SAF3C,yBAGfjB,EAAMI,MAAMD,KAHG,2CAGoCH,EAAMU,QAH1C,yBAGkEV,EAAMI,MAAMI,cAH9E,wGAMpBI,eACAG,YAAa,CAAC,GAAD,OACRf,EAAME,MAAMC,KADJ,sBACsBH,EAAMI,MAAMD,KADlC,mGAEyCH,EAAMI,MAAMI,cAFrD,yEAGkDR,EAAMU,QAHxD,iBAKbQ,eAAgB,CAAC,iBAAD,OACGlB,EAAMmB,KADT,iHAEsDnB,EAAMU,QAF5D,MAIhBU,UAAW,CAAC,sEAOZE,EAAU,SAACtB,GACf,OAAIA,EAAMK,OAASf,EAAKgB,mBAMbN,EAAMK,OAASf,EAAKmB,qBALtB,CACLc,WAAY,CAAC,KAYR,CACLA,WAAY,CAAC,GAAD,OACPvB,EAAMwB,WADC,sBACuBxB,EAAMI,MAAMD,KADnC,sCACqEH,EAAMU,QAD3E,gCAEGV,EAAMI,MAAMa,SAFf,6CAGHjB,EAAMU,QAHH,wCAG0CV,EAAMmB,KAHhD,+LCxKZM,EAAoB,CACxBvB,MAAO,CACLC,KAAM,MACNK,cAAe,OACfM,SAAU,KACVO,SAAU,MACVJ,SAAU,OAEZb,MAAO,CACLD,KAAM,MACNK,cAAe,iBACfM,SAAU,MACVO,SAAU,MACVJ,SAAU,OAEZD,KAAM,SACNG,KAAM,iBACNd,KAAMqB,KAAKC,MAAsB,EAAhBD,KAAKE,UACtBlB,QAAS,2BACTc,WAAY,SA2CCK,EAxCF,WACX,MAAwBC,mBAAmB,IAA3C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,qBAA1B,mBAAO9B,EAAP,KAAcmC,EAAd,KAqBA,OAZAC,qBAAU,WAERD,EAD4BV,KAE3B,IAGHW,qBAAU,WACJpC,GACFgC,ED7CsB,SAAChC,GAC3B,MAAM,CAAN,2BAKUA,EAAME,MAAMC,KALtB,aAK+BT,EAAWM,EAAME,MAAMY,UALtD,sCAK6Fd,EAAME,MAAMM,cALzG,eAK6HR,EAAMgB,KALnI,eAMKtB,EAAWM,EAAME,MAAMY,UAN5B,2FAOmCd,EAAME,MAAMY,SAP/C,+BAO8Ed,EAAME,MAAMe,SAP1F,+BAOyHjB,EAAMmB,KAP/H,eAQKpB,EAAQC,GAAOO,kBARpB,qBAWKP,EAAMI,MAAMD,KAXjB,uBAWoCH,EAAMmB,KAX1C,qBAYWnB,EAAMI,MAAMU,SAZvB,0BAYiDd,EAAMI,MAAMI,cAZ7D,iBAYmFR,EAAMI,MAAMa,SAZ/F,2GAa2CjB,EAAMI,MAAMD,KAbvD,gCAamFH,EAAMI,MAAMa,SAb/F,2BAcSjB,EAAMI,MAAMI,cAdrB,6CAeKR,EAAMI,MAAMD,KAfjB,6BAe0CH,EAAMI,MAAMa,SAftD,2BAeiFjB,EAAMwB,WAfvF,8BAeuHxB,EAAMI,MAAMa,SAfnI,6BAkBKjB,EAAME,MAAMC,KAlBjB,4BAkByCH,EAAMmB,KAlB/C,6EAkBwHnB,EAAMgB,KAlB9H,kBAmBQhB,EAAME,MAAMe,SAnBpB,iCAmBqDlB,EAAQC,GAAOC,WAnBpE,oDA0B4BD,EAAME,MAAMC,KA1BxC,2BA0B+DH,EAAMI,MAAMI,cA1B3E,gBA0BgGR,EAAMI,MAAMD,KA1B5G,sCA2BKH,EAAME,MAAMC,KA3BjB,yBA2BsCH,EAAME,MAAMY,SA3BlD,iCA4BKH,EAAQX,GAAOa,oBA5BpB,2DA+B+Cb,EAAMI,MAAMD,KA/B3D,YA+BmEQ,EAAQX,GAAOY,aA/BlF,mBA+ByGZ,EAAMI,MAAMI,cA/BrH,2BAgCiBR,EAAMmB,KAhCvB,+BAgCkDnB,EAAME,MAAMC,KAhC9D,uEAmCKQ,EAAQX,GAAOe,aAnCpB,oBAsCKJ,EAAQX,GAAOkB,gBAtCpB,oBAyCKP,EAAQX,GAAOoB,WAzCpB,kCAgDKE,EAAQtB,GAAOuB,YAhDpB,iBAmDKvB,EAAMI,MAAMD,KAnDjB,gBAmD6BH,EAAME,MAAMC,KAnDzC,2DC4CYkC,CAAarC,MAEtB,CAACA,IAGF,gCACE,8BACG+B,EAAKO,KAAI,SAAC7C,EAAM8C,GACf,GAAIA,GAASN,EACX,OAAO,cAAC,EAAD,CACKxC,KAAMA,GADD8C,QAMvB,wBAAQC,QA9BI,WAEdN,EADeD,EAAa,GAE5BQ,OAAOC,SAAS,CAACC,IAAKC,SAASC,KAAKC,gBA2BlC,sBC9CSC,EAbH,WACV,OACE,sBAAKC,UAAU,UAAf,UACE,iCACE,+CAEF,+BACE,cAAC,EAAD,UCLRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFP,SAASQ,eAAe,W","file":"static/js/main.e2f3e637.chunk.js","sourcesContent":["export interface Story {\n  leadA: Character; // Slicker\n  leadB: Character; // Homespun local\n  town: string; // Where they come from\n  city: string; // Where the slicker moved\n  plot: Plot;\n  contest: string; // For use in the contest plot\n  old_helper: string; // The old employee of the local business\n}\n\nexport interface Character {\n  name: string;\n  pronoun1: string;\n  pronoun2: string;\n  pronoun3: string;\n  place_of_work: string;\n}\n\nexport enum Plot {\n  DESTROY_THE_BUSINESS,\n  SAVE_THE_BUSINESS,\n  ENTER_THE_CONTEST\n}\n\nexport interface Act1 {\n  inciting_incident: string;\n  meet_cute: string;\n}\n\nexport interface Act2 {\n  second_interaction: string[];\n  heart_warmer: string;\n  start_drive: string[];\n  continue_drive: string[];\n  low_point: string[];\n}\n\nexport interface Act3 {\n  final_push: string[];\n}\n","const Row = (props: {\n  text: string,\n}) => {\n  return (\n    <p>{props.text}</p>\n  );\n}\n\nexport default Row;","import { Act1, Act2, Act3, Plot, Story } from \"./StoryTypes\";\n\nexport const getStoryRows = (story: Story): string[] => {\n  return [\n    ////////\n    `- Act I -`,\n    ////////\n\n    `Meet ${story.leadA.name}. ${capitalize(story.leadA.pronoun1)}'s a high-flyer at the big ${story.leadA.place_of_work} in ${story.city}.`,\n    `${capitalize(story.leadA.pronoun1)} works really long hours to make the big bucks.`,\n    `This year, in early December, ${story.leadA.pronoun1} needs to return to ${story.leadA.pronoun3} small home-town of ${story.town},`,\n    `${getAct1(story).inciting_incident}.`,\n    `...`,\n\n    `${story.leadB.name} never left ${story.town},`,\n    `after ${story.leadB.pronoun1} inherited the ${story.leadB.place_of_work} from ${story.leadB.pronoun3} parents, who tragically died in a helicopter accident.`,\n    `Christmas has always been special for ${story.leadB.name}, because it reminds ${story.leadB.pronoun3} of them.`,\n    `The ${story.leadB.place_of_work} is not doing well financially,`,\n    `${story.leadB.name} explains this to ${story.leadB.pronoun3} only employee, ${story.old_helper}, an old friend of ${story.leadB.pronoun3} parents.`,\n    `...`,\n\n    `${story.leadA.name} arrives back in ${story.town} and is instantly shocked at how friendly everyone is compared to ${story.city}.`,\n    `In ${story.leadA.pronoun3} first night in town, ${getAct1(story).meet_cute}`,\n    `...`,\n\n    ////////\n    `- Act II -`,\n    ////////\n\n    `The following morning, ${story.leadA.name} arrives at the ${story.leadB.place_of_work} and ${story.leadB.name} is surprised and angry.`,\n    `${story.leadA.name} explains why ${story.leadA.pronoun1} is here:`,\n    ...getAct2(story).second_interaction,\n    `...`,\n\n    `That evening, despite being low on funds, ${story.leadB.name} ${getAct2(story).heart_warmer} at the ${story.leadB.place_of_work}.`,\n    `Everyone in ${story.town} attends, including ${story.leadA.name}, and the place is filled with Christmas spirit.`,\n    `...`,\n\n    ...getAct2(story).start_drive,\n    `...`,\n\n    ...getAct2(story).continue_drive,\n    `...`,\n\n    ...getAct2(story).low_point,\n    `...`,\n\n    ////////\n    `- Act III -`,\n    ////////\n\n    ...getAct3(story).final_push,\n    `...`,\n\n    `${story.leadB.name} and ${story.leadA.name} realise they are in love.`,\n    `They kiss.`,\n    `- THE END -`\n  ];\n}\n\nconst capitalize = (word: string): string => {\n  return word.replace(/^\\w/, (c) => c.toUpperCase());\n}\n\nconst getAct1 = (story: Story): Act1 => {\n  // TODO Randomise\n  const meet_cute = `${story.leadA.name} accidentally kicks ${story.leadB.name}'s dog, and they get in a big arguement and call each other names.`;\n\n  if (story.plot === Plot.SAVE_THE_BUSINESS) {\n    return {\n      inciting_incident: `to save the local ${story.leadB.place_of_work}`,\n      meet_cute,\n    };\n  } else if (story.plot === Plot.DESTROY_THE_BUSINESS) {\n    return {\n      inciting_incident: `to demolish the local ${story.leadB.place_of_work}`,\n      meet_cute,\n    };\n  } else {\n    // (ENTER THE CONTEST)\n    return {\n      inciting_incident: `to enter the ${story.leadB.place_of_work}'s annual ${story.contest}`,\n      meet_cute,\n    };\n  }\n}\n\nconst getAct2 = (story: Story): Act2 => {\n  // TODO Randomise\n  const heart_warmer = `gives out presents to blind children`;\n\n  if (story.plot === Plot.SAVE_THE_BUSINESS) {\n    return {\n      second_interaction: [\n        `Because ${story.leadA.pronoun1} heard the ${story.leadB.place_of_work} was going out of business,`,\n        `and wanted to see if ${story.leadA.pronoun1} could help save it,`,\n        `because ${story.leadA.pronoun1} always used to love it as a child`,\n      ],\n      heart_warmer,\n      start_drive: [\n        `${story.leadA.name} returns to ${story.city},`,\n        `to speak to ${story.leadA.pronoun3} boss at the ${story.leadA.place_of_work}.`,\n      ],\n      continue_drive: [\n        `Initially ${story.leadA.name} manages to convince the boss of the charms of ${story.town} and it's ${story.leadB.place_of_work}.`,\n        `But they refuse to give the money needed to save it`,\n      ],\n      low_point: [\n        `${story.leadA.name} quits on the spot, and returns to ${story.town} empty handed.`\n      ],\n    };\n  } else if (story.plot === Plot.DESTROY_THE_BUSINESS) {\n    return {\n      second_interaction: [\n        `Because ${story.leadA.pronoun3} ${story.leadA.place_of_work} is considering buying out the ${story.leadB.place_of_work} when it goes under,`,\n        `and turn it into luxury housing,`,\n        `and ${story.leadA.pronoun1} is here to see if it's a good investment.`,\n      ],\n      heart_warmer,\n      start_drive: [\n        `${story.leadA.name} returns to ${story.city},`,\n        `to speak to ${story.leadA.pronoun3} boss at the ${story.leadA.place_of_work}.`,\n      ],\n      continue_drive: [\n        `${story.leadA.name} tries to convince the boss that buying the ${story.town} ${story.leadB.place_of_work} would be a bad investment.`,\n        `The boss disagrees, and says they will demolish the ${story.leadB.place_of_work} next week`,\n      ],\n      low_point: [\n        `${story.leadA.name} quits on the spot, and returns to ${story.town} empty handed.`\n      ],\n    };\n  } else {\n    // (ENTER THE CONTEST)\n    return {\n      second_interaction: [\n        `${capitalize(story.leadA.pronoun1)} wants to enter the ${story.leadB.place_of_work}'s ${story.contest},`,\n        `because it reminds ${story.leadA.pronoun2} of ${story.leadA.pronoun3} childhood.`,\n        `${story.leadB.name} explains that there won't be a ${story.contest}, because the ${story.leadB.place_of_work} can't afford to put it on,`,\n        `and anyway, people just don't care about Christmas like they used to.`,\n      ],\n      heart_warmer,\n      start_drive: [\n        `${story.leadA.name} convinces ${story.leadB.name} they can raise the funds they need,`,\n        `by having a special Christmas-themed sale at the ${story.leadB.place_of_work},`,\n        `which will raise enough to save the business and hold the ${story.contest} once again.`\n      ],\n      continue_drive: [\n        `The people of ${story.town} come together to raise the money,`,\n        `united by the spirit of Christmas, everyone is preparing for the ${story.contest}.`,\n      ],\n      low_point: [\n        `But the local cop shuts it down for not having the right permits`,\n      ],\n    };\n  }\n}\n\nconst getAct3 = (story: Story): Act3 => {\n  if (story.plot === Plot.SAVE_THE_BUSINESS) {\n    return {\n      final_push: [\n        ``\n      ],\n    };\n  } else if (story.plot === Plot.DESTROY_THE_BUSINESS) {\n    return {\n      final_push: [\n        ``\n      ],\n    };\n  } else {\n    // (ENTER THE CONTEST)\n    return {\n      final_push: [\n        `${story.old_helper} convinces ${story.leadB.name} that they should hold the ${story.contest} anyway,`,\n        `it's what ${story.leadB.pronoun3} parents would have wanted.`,\n        `The ${story.contest} goes ahead, and everyone in ${story.town} attends`,\n        `Just as they are getting started, the police show up to call it off.`,\n        `However, when they see the Christmas spirit of the whole town,`,\n        `they decide to let it go ahead anyway`,\n      ],\n    };\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport { Plot, Story } from \"./StoryTypes\";\nimport Row from \"./Row\";\nimport { getStoryRows } from \"./StoryRows\";\n\nconst FAKE_STORY: Story = {\n  leadA: {\n    name: 'Tom',\n    place_of_work: 'bank',\n    pronoun1: 'he',\n    pronoun2: 'him',\n    pronoun3: 'his',\n  },\n  leadB: {\n    name: 'Sue',\n    place_of_work: 'ice cream shop',\n    pronoun1: 'she',\n    pronoun2: 'her',\n    pronoun3: 'her',\n  },\n  city: 'London',\n  town: 'Haywards Heath',\n  plot: Math.floor(Math.random() * 3),\n  contest: 'mince pie eating contest',\n  old_helper: 'Bruce',\n}\n\nconst Page = () => {\n  const [rows, setRows] = useState<string[]>([]);\n  const [currentRow, setCurrentRow] = useState(0);\n  const [story, setStory] = useState<Story>();\n\n  const nextRow = () => {\n    const newRow = currentRow + 1;\n    setCurrentRow(newRow);\n    window.scrollTo({top: document.body.clientHeight});\n  };\n\n  // ON APP INIT\n  useEffect(() => {\n    const starterStory: Story = FAKE_STORY;\n    setStory(starterStory);\n  }, []);\n\n  // ON BACKSTORY LOAD\n  useEffect(() => {\n    if (story) {\n      setRows(getStoryRows(story!));\n    }\n  }, [story]);\n\n  return (\n    <div>\n      <div>\n        {rows.map((text, index) => {\n          if (index <= currentRow) {\n            return <Row key={index}\n                        text={text}\n                  />\n          }\n        })}\n      </div>\n      <button onClick={nextRow}>Next</button>\n    </div>\n  );\n}\n\nexport default Page;","import './App.scss';\nimport Page from './page/Page';\n\nconst App = () => {\n  return (\n    <div className=\"wrapper\">\n      <header>\n        <h1>Story Maker</h1>\n      </header>\n      <main>\n        <Page></Page>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}